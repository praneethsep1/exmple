name: SonarQube and Azure Web App Deployment

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3.5.1

      - name: Set up Node.js
        uses: actions/setup-node@v2.5.2
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Build app
        run: npm run build --aot
        env:
          NODE_ENV: production

  sonarqube-scan:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@v1
        with:
          sonar-token: ${{ secrets.SONARQUBE_TOKEN }}
          project-key: CodeX-Frondenduat
          project-name: CodeX-Frondenduat
          sources: 'src'

  sonarqube-quality-gate:
    runs-on: ubuntu-latest
    needs: sonarqube-scan
    steps:
      - name: SonarQube Quality Gate
        uses: sonarsource/sonarqube-quality-gate-action@v1
        with:
          sonar-token: ${{ secrets.SONARQUBE_TOKEN }}

  security-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Install Git-Secrets Scan
        run: sudo apt-get install git-secrets -y
      - name: Git-Secrets Scan
        run: git secrets --scan

  uat-deployment:
    runs-on: ubuntu-latest
    needs: [build, sonarqube-quality-gate, security-scan]
    if: github.ref == 'refs/heads/main'
    env:
      AZURE_APP_ID: ${{ secrets.AZURE_APP_ID }}
      AZURE_PASSWORD: ${{ secrets.AZURE_PASSWORD }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_RESOURCE_GROUP: ${{ secrets.AZURE_RESOURCE_GROUP }}
      AZURE_APP_NAME: ${{ secrets.AZURE_APP_NAME }}
      ZIP_FILE: "app-${{ github.run_number }}.zip"
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Azure CLI
        uses: azure/cli@v1
        with:
          inlineScript: |
            az login --service-principal -u ${{ secrets.AZURE_APP_ID }} -p ${{ secrets.AZURE_PASSWORD }} --tenant ${{ secrets.AZURE_TENANT_ID }}
            az webapp deployment source config-zip -g ${{ secrets.AZURE_RESOURCE_GROUP }} -n ${{ secrets.AZURE_APP_NAME }} --src ${{ env.ZIP_FILE }}

      - name: Create ZIP archive
        run: zip -r $ZIP_FILE dist/

      - name: Deploy to Azure Web App
        uses: Azure/webapps-deploy@v2
        with:
          app-name: ${{ secrets.AZURE_APP_NAME }}
          package: ${{ env.ZIP_FILE }}
